<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  
  <title><![CDATA[Michael's Blog]]></title>
  <subtitle><![CDATA[Stay foolish, Stay hungry, Learning, Sharing, Growing.]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://tangxin.club//"/>
  <updated>2015-11-20T08:07:20.055Z</updated>
  <id>http://tangxin.club//</id>
  
  <author>
    <name><![CDATA[Michael]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="http://tangxin.club/2015/11/20/15.Android%E4%B8%ADContext%E8%AE%B2%E8%A7%A3/"/>
    <id>http://tangxin.club/2015/11/20/15.Android中Context讲解/</id>
    <published>2015-11-20T08:07:20.055Z</published>
    <updated>2015-11-20T08:07:20.055Z</updated>
    <content type="html"><![CDATA[<h1 id="1-Context类型">1.Context类型</h1><p>Android应用都是使用Java语言来编写的，那么可以思考一下，一个Android程序和一个Java程序，他们最大的区别在哪里？划分界限又是什么呢？其实简单点分析，Android程序不像Java程序一样，随便创建一个类，写个main()方法就能跑了，而是要有一个完整的Android工程环境，在这个环境下，我们有像Activity、Service、BroadcastReceiver等系统组件，而这些组件并不是像一个普通的Java对象new一下就能创建实例的了，而是要有它们各自的上下文环境，也就是这里讨论的Context。可以这样讲，Context是维持Android程序中各组件能够正常工作的一个核心功能类。</p>
<h1 id="2-Context的继承结构">2.Context的继承结构</h1><p><img src="http://7xjuns.com1.z0.glb.clouddn.com/15-11-20/44180412.jpg" alt=""><br>可以看到，直系子类有两个，一个是ContextWrapper，一个是ContextImpl。从名字上就可以看出，ContextWrapper是上下文功能的封装类，而ContextImpl则是上下文功能的实现类。而ContextWrapper又有三个直接的子类，ContextThemeWrapper、Service和Application。其中，ContextThemeWrapper是一个带主题的封装类，而它有一个直接子类就是Activity。</p>
<p>那么在这里我们至少看到了几个所比较熟悉的面孔，Activity、Service、还有Application。由此，其实我们就已经可以得出结论了，Context一共有三种类型，分别是Application、Activity和Service。这三个类虽然分别各种承担着不同的作用，但它们都属于Context的一种，而它们具体Context的功能则是由ContextImpl类去实现的。</p>
<p>那么Context到底可以实现哪些功能呢？这个就实在是太多了，弹出Toast、启动Activity、启动Service、发送广播、操作数据库等都需要用到Context。由于Context的具体能力是由ContextImpl类去实现的，因此在绝大多数场景下，Activity、Service和Application这三种类型的Context都是可以通用的。不过有几种场景比较特殊，比如启动Activity，还有弹出Dialog。出于安全原因的考虑，Android是不允许Activity或Dialog凭空出现的，一个Activity的启动必须要建立在另一个Activity的基础之上，也就是以此形成的返回栈。而Dialog则必须在一个Activity上面弹出（除非是System Alert类型的Dialog），因此在这种场景下，我们只能使用Activity类型的Context，否则将会出错</p>
<h1 id="3-Context数量">3.Context数量</h1><p>那么一个应用程序中到底有多少个Context呢？其实根据上面的Context类型我们就已经可以得出答案了。Context一共有Application、Activity和Service三种类型，因此一个应用程序中Context数量的计算公式就可以这样写：</p>
<blockquote>
<p>Context数量 = Activity数量 + Service数量 + 1</p>
</blockquote>
<p>上面的1代表着Application的数量，因为一个应用程序中可以有多个Activity和多个Service，但是只能有一个Application。</p>
<h1 id="4-">4.</h1><p>参考: <a href="http://android.jobbole.com/82044/" target="_blank" rel="external">http://android.jobbole.com/82044/</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="1-Context类型">1.Context类型</h1><p>Android应用都是使用Java语言来编写的，那么可以思考一下，一个Android程序和一个Java程序，他们最大的区别在哪里？划分界限又是什么呢？其实简单点分析，Android程序不像Java程序]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[华为 Mate S Root 步骤]]></title>
    <link href="http://tangxin.club/2015/10/11/14.%E5%8D%8E%E4%B8%BAMate%20S%20Root%E6%AD%A5%E6%96%B9%E6%B3%95/"/>
    <id>http://tangxin.club/2015/10/11/14.华为Mate S Root步方法/</id>
    <published>2015-10-11T00:49:00.000Z</published>
    <updated>2015-11-20T07:32:25.518Z</updated>
    <content type="html"><![CDATA[<p>用了半个月华为Mate S没Root用着各种不爽，花半天才Root<br>这款机器。9月15号出到现在不到一个月而市面上的一键root还没匹配<br>该机型,试了6到7款一键root软件对华为mate s都不起作用于是乎google一下<br>查到了解决方法(百度喳喳怎么都查不到),记录以下步骤方便以后再次root。</p>
<ol>
<li><p>首先到华为官网去根据官方教程 解锁<br><a href="http://www.emui.com/plugin.php?id=unlock" target="_blank" rel="external">http://www.emui.com/plugin.php?id=unlock</a></p>
</li>
<li><p>下载TWRP Recovery的img文件 并刷入到手机中<br>fastboot flash recovery mates-twrp.img</p>
</li>
<li><p>下载 UPDATE-SuperSU-v2.46.zip<br>复制到手机根目录下</p>
</li>
<li><p>进入TWRP Recovery<br>adb reboot recovery</p>
</li>
<li><p>点击Install 选择<br>UPDATE-SuperSU-v2.46.zip</p>
</li>
</ol>
<p>参考文章:<br><a href="http://www.android.gs/root-install-twrp-recovery-huawei-mate-s/" target="_blank" rel="external">http://www.android.gs/root-install-twrp-recovery-huawei-mate-s/</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>用了半个月华为Mate S没Root用着各种不爽，花半天才Root<br>这款机器。9月15号出到现在不到一个月而市面上的一键root还没匹配<br>该机型,试了6到7款一键root软件对华为mate s都不起作用于是乎google一下<br>查到了解决方法(百度喳喳怎么都]]>
    </summary>
    
      <category term="root" scheme="http://tangxin.club/tags/root/"/>
    
      <category term="Android" scheme="http://tangxin.club/categories/Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Android面试硬技能指导]]></title>
    <link href="http://tangxin.club/2015/07/01/10.%E9%9D%A2%E8%AF%95%E7%A1%AC%E6%8A%80%E8%83%BD%E6%8C%87%E5%AF%BC/"/>
    <id>http://tangxin.club/2015/07/01/10.面试硬技能指导/</id>
    <published>2015-06-30T18:40:00.000Z</published>
    <updated>2015-07-18T05:55:29.745Z</updated>
    <content type="html"><![CDATA[<h2 id=""><img src="http://7xjuns.com1.z0.glb.clouddn.com/15-7-2/83796359.jpg" alt="概要"></h2><a id="more"></a>
<blockquote>
<p><img src="http://7xjuns.com1.z0.glb.clouddn.com/15-7-2/73714528.jpg" alt="Java基础"></p>
<p>java语言是很容易被反编译的  </p>
<p>C/C++ 有很多好的庞大的库  NDK与C/C++<br>游戏开发  找工作时选择更多</p>
<p>Spring框架 全是使用Java反射来实现的</p>
</blockquote>
<hr>
<blockquote>
<p><img src="http://7xjuns.com1.z0.glb.clouddn.com/15-7-2/86478342.jpg" alt="Android基础"></p>
<p>Service 在Android5.0中对启动它有了新的要求<br>BroadcastReceiver 的几个广播<br>ContentProvider 应用程序之间数据共享</p>
<p>隐式Intent 显示Intent</p>
</blockquote>
<hr>
<p><img src="http://7xjuns.com1.z0.glb.clouddn.com/15-7-2/33453306.jpg" alt="UI控制与布局"></p>
<blockquote>
<p>每个公司都用自己的风格 自定义控件</p>
<p>透明 移动 旋转 缩放 基本动画效果</p>
<p>ListView优化方案  </p>
<p>UI界面开发常OOM(存内溢出) 知道如果解决和避免</p>
<p>通过 SensorManager可以获取所有传感器的列表<br>虚拟现实用的陀螺仪</p>
</blockquote>
<hr>
<blockquote>
<p><img src="http://7xjuns.com1.z0.glb.clouddn.com/15-7-2/12547788.jpg" alt="传感器"></p>
<p>距离传感器   手机放到耳边 屏幕为黑掉  一般在听筒旁边</p>
<p>Android定义系统在中国不好用 但可用第三方如 百度地图</p>
</blockquote>
<hr>
<blockquote>
<p><img src="http://7xjuns.com1.z0.glb.clouddn.com/15-7-2/56592453.jpg" alt="常用数据格式"></p>
<p>JSON轻量级 适合程序生成 与服务器通信常用</p>
<p>XML格式清晰 适合手动编写 常于与配制文件</p>
<p>Android内制了解析工具直接哪来用</p>
</blockquote>
<hr>
<blockquote>
<p><img src="http://7xjuns.com1.z0.glb.clouddn.com/15-7-2/55176016.jpg" alt="网络编程"></p>
<p>URLConnection 是JAVA语言中所内制的API</p>
<p>HttpClinet 是Apache中的开源项目也是用来HTTP通信的 功能比URLConnection完善的多</p>
<p>上面HTTP 短连接  </p>
<p>Socket长连接,Android 也提供了SocketApi使用起来非常方便,<br>此外如果要图片缓存加载 需要用到第三方库</p>
<p>NIO 全新的网络编译API   异步通信 使用它开发服务器程序 效率是非常高的</p>
</blockquote>
<hr>
<blockquote>
<p><img src="http://7xjuns.com1.z0.glb.clouddn.com/15-7-2/75013875.jpg" alt="NDK C/C++"></p>
<p>NDK Android开发还不是完善  Android Studio1.3只提供了编译离集成开发环境还有很远<br>目前开发比较痛苦的</p>
<p>IntelliJ IDEA 以提供了全完C/c++开发版本   以后Android Studio可以会支持</p>
<p>Android.mk 配制C++ 编译的一些属性</p>
<p>Application.mk 配制程序的属性</p>
<p>javah  提高开发效率的工具  根据java类生成相关头文件</p>
<p>如果提示程序意外退出  是Java程序的问题</p>
<p>如果是C++程序的问题 会直接退出</p>
</blockquote>
<hr>
<blockquote>
<p><img src="http://7xjuns.com1.z0.glb.clouddn.com/15-7-2/81571861.jpg" alt="游戏开发"></p>
<p>Unity 开发非常成熟了</p>
<p>如果用Unity开发一些展示程序 基本上不用写代码</p>
<p>如果用它开发游戏的话 也只要写一小部分代码就可以完成一个小游戏</p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id=""><img src="http://7xjuns.com1.z0.glb.clouddn.com/15-7-2/83796359.jpg" alt="概要"></h2>]]>
    
    </summary>
    
      <category term="Android极客学院视频笔记" scheme="http://tangxin.club/tags/Android%E6%9E%81%E5%AE%A2%E5%AD%A6%E9%99%A2%E8%A7%86%E9%A2%91%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Android" scheme="http://tangxin.club/categories/Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[使用Hexo框架搭Blog]]></title>
    <link href="http://tangxin.club/2015/03/27/1.%E4%BD%BF%E7%94%A8Hexo%E6%A1%86%E6%9E%B6%E6%90%ADBlog/"/>
    <id>http://tangxin.club/2015/03/27/1.使用Hexo框架搭Blog/</id>
    <published>2015-03-27T13:49:00.000Z</published>
    <updated>2015-11-20T04:42:00.043Z</updated>
    <content type="html"><![CDATA[<h2 id="快速部署环境">快速部署环境</h2><h3 id="下载安装hexo">下载安装hexo</h3><pre><code>下载并安装node.js  https:<span class="comment">//nodejs.org/</span>
下载并安装git      http:<span class="comment">//www.git-scm.com/download/</span>
安装 hexo         $ npm install -<span class="keyword">g</span> hexo-<span class="keyword">cli</span>
检查是否成功         $ hexo <span class="keyword">version</span>
</code></pre><a id="more"></a>
<h3 id="生成hexo">生成hexo</h3><pre><code><span class="variable">$ </span>hexo init &lt;folder&gt;
<span class="variable">$ </span>cd &lt;folder&gt;
<span class="variable">$ </span>npm install
</code></pre><p>了解目录</p>
<pre><code>node_modules 是  执行npm install..后生成的
public 是在   执行hexo g中生成的静太网页文件
----------------------
下面是hexo init 初始化就有的
source  
themes
scaffolds   <span class="comment">//骨架 hexo draf/page/post new "article_title"</span>
draf/page/post scaffolds中用对应的.md文件对应生成相应的格式可以自定义
_config<span class="class">.yml</span>
db<span class="class">.json</span>
package<span class="class">.json</span>

source/_posts <span class="comment">//中的文章 hexo g后生成</span>
source/_draft <span class="comment">//中的文单 hexo g后不生成</span>
source/_draft <span class="comment">//通过hexo new draft "article_title"生成 相当于草稿文件  </span>
hexo publish draft <span class="string">"article_title"</span> <span class="comment">//草稿移动到source/_posts</span>
</code></pre><h3 id="生成静态HTML">生成静态HTML</h3><pre><code><span class="variable">$ </span>npm install hexo --save
<span class="variable">$ </span>hexo g
</code></pre><h3 id="在本地调试">在本地调试</h3><pre><code>$ npm <span class="operator"><span class="keyword">install</span> hexo-<span class="keyword">server</span> <span class="comment">--save</span>
$ hexo s 或 hexo s -p端口</span>
</code></pre><h3 id="发布到Github上">发布到Github上</h3><pre><code><span class="number">1</span>.安装hexo-deployer-git  
    $ npm install hexo-deployer-git --save
<span class="number">2</span>.配制_config.yml文件deploy:
     type: git
      repo: git@github<span class="class">.com</span>:qq897425998/qq897425998<span class="class">.github</span><span class="class">.io</span><span class="class">.git</span>
      branch: master
<span class="number">3</span>.$ hexo d
</code></pre><h2 id="写文章操作">写文章操作</h2><pre><code><span class="variable">$ </span>hexo new <span class="string">"article_title"</span>
<span class="variable">$ </span>hexo new draft <span class="string">"article_title"</span>
<span class="variable">$ </span>hexo publish draft <span class="string">"article_title"</span>
</code></pre><p>  除了用合令也可以直接在source/_posts文件下新建文章</p>
<h2 id="扩展阅读">扩展阅读</h2><p><a href="https://hexo.io/docs/" target="_blank" rel="external">hexo官方文档</a><br><a href="https://github.com/iissnan/hexo-theme-next/wiki/%E5%88%9B%E5%BB%BA%E5%88%86%E7%B1%BB%E9%A1%B5%E9%9D%A2" target="_blank" rel="external">github上中文wiki</a></p>
<h2 id="我遇到过的问题">我遇到过的问题</h2><blockquote>
<p>Q1.浏览器中出现”Cannot GET /“ 怎么办?  </p>
<font color="white"> 执行 ‘npm install’ </font>  

<p>Q2.怎么显示read more ?</p>
<font color="white"> 在文章中适合处添加 <code>&lt;!-- more --&gt;</code> </font>  

<p>Q3.配制<code>theme icrus</code> 遇到  Cannot GET /archives   ?</p>
<font color="white"> 在<code>theme/_config.yml</code> 中将menu中/archives前的/去掉就行了 (theme作者merge我的pull request) </font>

<p>Q4.首页文章太多怎么分页?</p>
<font color="white"> 在全局_config.yml中配制 <code>per_page:</code> 每页显示数 </font>

<p>Q5.怎么给一篇文章加多个标签?</p>
<font color="white">标答格式 [tag1,tag2,tag3..] </font>

<p>Q6.怎么让hexo d后不册除想上传的文件,比如CANME文件？</p>
<font color="white">把文件发到source目录下</font>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="快速部署环境">快速部署环境</h2><h3 id="下载安装hexo">下载安装hexo</h3><pre><code>下载并安装node.js  https:<span class="comment">//nodejs.org/</span>
下载并安装git      http:<span class="comment">//www.git-scm.com/download/</span>
安装 hexo         $ npm install -<span class="keyword">g</span> hexo-<span class="keyword">cli</span>
检查是否成功         $ hexo <span class="keyword">version</span>
</code></pre>]]>
    
    </summary>
    
      <category term="hexo" scheme="http://tangxin.club/tags/hexo/"/>
    
      <category term="WEB" scheme="http://tangxin.club/categories/WEB/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[android studio使用]]></title>
    <link href="http://tangxin.club/2015/02/07/13.%E9%BB%91%E9%A9%AC%E5%85%AC%E5%BC%80%E8%AF%BE%E7%AC%94%E8%AE%B0/"/>
    <id>http://tangxin.club/2015/02/07/13.黑马公开课笔记/</id>
    <published>2015-02-07T00:49:00.000Z</published>
    <updated>2015-11-20T04:48:47.013Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>直播用的Gensee 展视互动</p>
<p>30w 到 50w  黑马 传智   北上深    缺上海    有期权<br>明年公司上市</p>
</blockquote>
<h1 id="优化Android_Studio/Gradle构建">优化Android Studio/Gradle构建</h1><blockquote>
<p><a href="http://bbs.itheima.com/thread-204217-1-1.html" target="_blank" rel="external">http://bbs.itheima.com/thread-204217-1-1.html</a></p>
<p>android studio  要 jdk1.7以后  否则报JDK not found error</p>
<p>eclipse 的.ini与也可以配制内存吧</p>
<p>勾选会很快  如果要加载第三发库不要勾 <img src="http://7xjuns.com1.z0.glb.clouddn.com/15-7-7/92151777.jpg" alt=""></p>
<p><img src="http://7xjuns.com1.z0.glb.clouddn.com/15-7-7/71498533.jpg" alt=""></p>
<p>true后面注意不好用空格</p>
<p><img src="http://7xjuns.com1.z0.glb.clouddn.com/15-7-7/78207345.jpg" alt=""></p>
<p><img src="http://7xjuns.com1.z0.glb.clouddn.com/15-7-7/17848714.jpg" alt=""></p>
<p>自动生成findviewbyid</p>
<p>viewHoLd 自动生成</p>
<p>自动生成Json对象</p>
<p>图片  选择器自动生成</p>
<p>mipmap 拿图片与eclipse 不一样</p>
<p>签名.jks 与.keystore eclipse不一样  只是名字换了</p>
<p>gradle Android Studio核心 Eclipse  Andstudio 是Moudles</p>
<p>Android 用目录节够看</p>
<p>Project 目录节够</p>
<p>Eclipse 叫项目 And</p>
<p>在工作时一个工作空间只能出现一个项目一个App 一个modules 一个项目挂了 全都挂了 都不知道是那个Module挂的  所以入一个modules<br><img src="http://7xjuns.com1.z0.glb.clouddn.com/15-7-7/46371946.jpg" alt=""></p>
<p>.gradle 文件修改 改改点下同步grandle sysc 按钮</p>
<p><a href="https://plugins.jetbrains.com/?androidstudio" target="_blank" rel="external">找Android Studio插件</a></p>
<p><a href="http://tools.android.com/tech-docs/new-build-system/user-guide#TOC-Simple-build-files" target="_blank" rel="external">Gradle帮助文档</a></p>
<p>导别人的Android Studio 项目注意看他的grandle配制的版本 gradle-&gt;gradle-&gt;wrapper.properties 要个自己目录一下的对应</p>
<p><a href="https://bintray.com/bintray/jcenter" target="_blank" rel="external">jcenter服务器</a></p>
<p>多渠到打包</p>
<ul>
<li><img src="http://7xjuns.com1.z0.glb.clouddn.com/15-7-8/81877316.jpg" alt=""></li>
<li><img src="http://7xjuns.com1.z0.glb.clouddn.com/15-7-8/98538327.jpg" alt=""></li>
<li><img src="http://7xjuns.com1.z0.glb.clouddn.com/15-7-8/23180132.jpg" alt=""></li>
</ul>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p>直播用的Gensee 展视互动</p>
<p>30w 到 50w  黑马 传智   北上深    缺上海    有期权<br>明年公司上市</p>
</blockquote>
<h1 id="优化Android_Studio/Gradle构建">优]]>
    </summary>
    
      <category term="android studio" scheme="http://tangxin.club/tags/android-studio/"/>
    
      <category term="Android" scheme="http://tangxin.club/categories/Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[XML]]></title>
    <link href="http://tangxin.club/2014/05/29/12.XML/"/>
    <id>http://tangxin.club/2014/05/29/12.XML/</id>
    <published>2014-05-28T23:49:00.000Z</published>
    <updated>2015-11-20T04:47:40.403Z</updated>
    <content type="html"><![CDATA[<h2 id="XML技术:">XML技术:</h2><p>与数据相关技术，在企业中xml技术常用来存储数据和传输数据 ，流行原因 ——- xml与任何编程语言无关<br>xml 可用于 php、java、.net 任何编程语言</p>
<h2 id="XML典型存储和传输应用：">XML典型存储和传输应用：</h2><p>1、XML 充当数据库 保存数据信息 —- 试题采用xml保存的 、google 数据信息通过xml格式保存<br>2、在AJAX传输数据 、WebService技术 网络中传输数据时，格式采用xml<br>在HTML中预定义了很多标记，每个标记都有相应显示效果，xml所有标记没有被预定义<br>在xml中 <name>HLG</name> ——  想确定name标记含义 ，需要对xml 添加约束</p>
<h2 id="XML语法">XML语法</h2><p>5、CDATA块<br>6、处理指令</p>
<h3 id="文档声明">文档声明</h3><ol>
<li>任何xml必须具备文档声明 &lt;?xml version=”1.0” ?&gt;</li>
<li>XML是一种标记语言 存储和传输数据 —- 保存数据内容</li>
<li>没有指定xml 编码集 —- 默认采用ISO-8859-1 编码 （不支持中文数据）</li>
<li>注意问题 当xml 指定encoding=”utf-8” 是浏览器查看编码集  ——— 浏览器查看编码集必须要和文件保存编码集一致</li>
<li>新建记事本程序采用系统默认编码集 —- 默认编码集gbk —— 使用utf-8编码 另存为</li>
<li>当声明standalone = “yes” 该xml是独立xml 不依赖外面其它文件，standalone = “no” 该xml 依赖外部一些文件</li>
<li>通过PI指令控制xml显示样式 （指令之前不能有注释）<br>当xml 使用pi指令 引用CSS —- 效果等同于HTML，进行页面数据展示<br>通过xml进行显示数据 ，通过XSLT 修饰xml数据显示 （类似CSS）</li>
</ol>
<h3 id="元素">元素</h3><p>XML 通过元素描述复杂关系模型数据</p>
<h3 id="属性和注释">属性和注释</h3><ol>
<li>所有xml元素必须结束<br><abc></abc> ——- 在xml 文件中如果标签中没有内容 自结束 <abc></abc></li>
<li>标签不允许交叉嵌套</li>
<li>有且仅有一个根元素</li>
<li>xml文件中 空格和换行 会被解析器进行解析的</li>
<li>严格区分大小写，元素和属性名称不能以数字开始</li>
</ol>
<p>属性定义语法 &lt;元素名称 属性名称=”属性值” 属性名称=”属性值” ….&gt;<br>一个元素定义多个属性的，每个属性值必须使用单引号和双引号</p>
<ol>
<li>属性的值必须用单引号或者双引号 引起来</li>
<li>xml注释与html注释相同 <!-- --> 注释不能嵌套</li>
</ol>
<h3 id="CDATA块">CDATA块</h3><ul>
<li>CDATA区域内 保留不被解析器解析的内容 ——通常存放特殊代码，这些代码造成xml格式混乱</li>
<li>CDATA和转义字符在哪些情况使用？区别？</li>
<li>优先使用CDATA XML技术存储数据，传输数据、解析数据<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="cdata">&lt;![CDATA[ &lt;book&gt;书 &lt;/book&gt; ]]&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="XML_技术应用_两大类">XML 技术应用 两大类</h2><p>1、传输和存储数据 ——- 程序员为了简化开发，不对xml使用约束技术</p>
<ul>
<li>不使用xml约束技术，xml 格式不一定正确</li>
<li>所有xml 数据内容生成，解析过程 都是通过程序来完成的<br>2、使用xml 作为配置文件</li>
<li>Android SSH ——- 程序员为了保证xml元素准确性，通常xml文档使用约束技术的</li>
</ul>
<h2 id="什么xml使用约束？">什么xml使用约束？</h2><ul>
<li>使用约束xml文档 —- 元素内容格式更加规范</li>
<li>如果企业中xml没有使用约束 ——— 通过程序生成xml和解析xml时，不使用约束，代码更加简单</li>
</ul>
<h2 id="XML约束技术_DTD_和_Schema">XML约束技术 DTD 和 Schema</h2><h3 id="DTD技术快速入门">DTD技术快速入门</h3><ol>
<li>编写数据xml —- books.xml</li>
<li>编写dtd文件</li>
<li>为文档每一个元素(不同名称) &lt;!ELEMENT<br>语法 &lt;!ELEMENT 元素名称 子元素&gt;<br>元素内部文本 #PCDATA</li>
<li>将xml文件与dtd文件关联起来</li>
</ol>
<h3 id="DTD与xml关联三种方式">DTD与xml关联三种方式</h3><ol>
<li>内部DTD ——- 语法 &lt;!DOCTYPE 根元素 []&gt;</li>
<li>外部DTD (引用本地DTD) ——- 语法 &lt;!DOCTYPE 根元素 SYSTEM “本地DTD文件位置” &gt;</li>
<li>公共DTD (引用网络上DTD)  &lt;!DOCTYPE 文档根结点 PUBLIC “DTD名称” “DTD文件的URL”&gt;</li>
<li>公共DTD 使用 名称 类似W3C规范官方组织规定的</li>
</ol>
<h3 id="元素（ELEMENT）定义">元素（ELEMENT）定义</h3><p>内容特点符合含义</p>
<ul>
<li>() 子元素、分组</li>
<li>, 代表子元素顺序</li>
<li>+ * ?  —— 正则表达式 + 1到多个 、* 任意个（0到多个）、 ? 0或者1个</li>
<li>| 多选一</li>
</ul>
<p>特殊元素内容：文本类型内容 #PCDATA  子元素内容如果为空 EMPTY</p>
<h3 id="属性（ATTLIST）定义">属性（ATTLIST）定义</h3><ul>
<li>语法：&lt;!ATTLIST 元素名称 属性列表 &gt;</li>
<li>属性列表：</li>
<li>属性名称 类型 约束</li>
<li>属性名称 类型 约束</li>
<li>属性名称 类型 约束</li>
<li>属性名称 类型 约束</li>
</ul>
<h3 id="属性类型">属性类型</h3><ul>
<li>CDATA 文本类型属性</li>
<li>(值1|值2|值3 ) 三个值选一个</li>
<li>ID 表示属性值唯一</li>
</ul>
<h3 id="约束">约束</h3><ul>
<li><h1 id="REQUIERD_属性必须">REQUIERD 属性必须</h1></li>
<li><h1 id="IMPLIED_属性可选">IMPLIED 属性可选</h1></li>
<li>fixed value 属性值固定</li>
<li>default 默认值</li>
</ul>
<h3 id="实体（ENTITY）定义">实体（ENTITY）定义</h3><p>对于xml数据内容重复，可以抽取实体<br>语法：&lt;!ENTITY 实体名称 “实体内容” &gt;</p>
<h2 id="XML_Schema_使用一套预先定义好元素和属性_开发的">XML Schema 使用一套预先定义好元素和属性 开发的</h2><ul>
<li>预先定义好元素和属性 规定了schema 结构和内容</li>
<li>定义schema 规定xml文档 格式和内容</li>
<li>预先已经定义好元素和属性 ——— 定义schema  ———- 定义xml实例</li>
<li>Schema本身也是xml ，不像DTD使用单独语法</li>
<li>将schema中定义元素，绑定URI地址（名称空间）上，用来唯一标识元素来自哪个schema 。</li>
<li>为什么要有名称空间？ 一个xml实例 引用多个Schema ，当两个schema定义同名元素，为了区分同名元素引用自哪个文档。</li>
</ul>
<h3 id="Schema快速入门">Schema快速入门</h3><p>1、编写数据xml文件</p>
<p>2、编写schema文件 .xsd</p>
<p>1） 引入 W3C 名称空间 xmlns=”<a href="http://www.w3.org/2001/XMLSchema" target="_blank" rel="external">http://www.w3.org/2001/XMLSchema</a>“<br>每一个元素 对应 <element></element></p>
<p>区分复杂元素和简单元素</p>
<p>2) 为schema定义元素指定名称空间 URI （URI可以是任何路径）</p>
<p>3、在xml实例数据文件中 ，引用自定义Schema<br>elementFormDefault=”unqualified”</p>
<p>1、如果schema 将 elementFormDefault=”unqualified” ，xml 实例文档 引用名称空间必须使用前缀 —— 前缀修饰根元素</p>
<p>2、当前xml实例文档所有子元素必须不能用前缀</p>
<p>名称空间 作用 —- 唯一标识schema当中定义元素</p>
<p>简单元素 直接编写type属性 、复杂元素 <complextype></complextype></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="XML技术:">XML技术:</h2><p>与数据相关技术，在企业中xml技术常用来存储数据和传输数据 ，流行原因 ——- xml与任何编程语言无关<br>xml 可用于 php、java、.net 任何编程语言</p>
<h2 id="XML典型存储和传输应用：]]>
    </summary>
    
      <category term="DTD" scheme="http://tangxin.club/tags/DTD/"/>
    
      <category term="Schema" scheme="http://tangxin.club/tags/Schema/"/>
    
      <category term="XML" scheme="http://tangxin.club/tags/XML/"/>
    
      <category term="其它" scheme="http://tangxin.club/categories/%E5%85%B6%E5%AE%83/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Pull解析与写入XML]]></title>
    <link href="http://tangxin.club/2014/05/25/11.Pull%E8%A7%A3%E6%9E%90%E4%B8%8E%E5%86%99%E5%85%A5XML/"/>
    <id>http://tangxin.club/2014/05/25/11.Pull解析与写入XML/</id>
    <published>2014-05-24T23:49:00.000Z</published>
    <updated>2015-11-20T04:47:15.370Z</updated>
    <content type="html"><![CDATA[<h2 id="Pull简介">Pull简介</h2><ul>
<li>android中跟据布局文件用Pull解析再用反射创建对象</li>
<li>常见的XML解析方式有三种,DOM,SAX,Pull, Android系统中推荐使用Pull</li>
<li>Pull解析器是一个开源的java项目,Android系统内部解析XML文件均为此种方式,也可用于JavaEE项目</li>
<li>Pull解析器运行方式与SAX类似,提供各种事件的判断</li>
<li><a href="http://xmlpull.org" target="_blank" rel="external">官方网站</a></li>
</ul>
<h2 id="使用Pull解析器解析XML文件">使用Pull解析器解析XML文件</h2><ul>
<li><code>Xml.newPullPaser()</code> 获得解析器</li>
<li><code>paser.setInput(in,&quot;UTF-8&quot;)</code> 设置输入流以及编码格式</li>
<li><code>paser.next()</code> 获取下一个解析事件,得到一个事件代码</li>
<li><code>XmlPullParser</code> 中定义了常量来标识各种解析事件<br><code>START_DOCUMENT</code> <code>END_DOCUMNT</code> <code>START_TAG</code> <code>END_TAG</code> <code>TEXT</code></li>
</ul>
<h2 id="使用XmlSerializer写出XML">使用XmlSerializer写出XML</h2><ul>
<li>使用以下方法生成XML,和XML文档顺序类似<pre><code>获取解析器<span class="pseudo">:Xml</span><span class="class">.newSerializer</span>()
  设置输出流<span class="pseudo">:serializer</span><span class="class">.setOutput</span>(out,<span class="string">"UTF-8"</span>);
  开始文档<span class="pseudo">:serializer</span><span class="class">.startDocument</span>(<span class="string">"UTF-8"</span>,true);
  结束文档<span class="pseudo">:serializer</span><span class="class">.endTag</span>(null,<span class="string">"persons"</span>);
  开启标签<span class="pseudo">:serializer</span><span class="class">.startTag</span>(null,<span class="string">"persons"</span>);
  结束标签<span class="pseudo">:serializer</span><span class="class">.endTag</span>(null,<span class="string">"name"</span>);
  设置属性: <span class="tag">serializer</span><span class="class">.attribute</span>(null,<span class="string">"id"</span>,p.<span class="function">getId</span>()<span class="class">.toString</span>());
  设置文本: <span class="tag">serializer</span><span class="class">.text</span>(p.<span class="function">getName</span>());
</code></pre></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="Pull简介">Pull简介</h2><ul>
<li>android中跟据布局文件用Pull解析再用反射创建对象</li>
<li>常见的XML解析方式有三种,DOM,SAX,Pull, Android系统中推荐使用Pull</li>
<li>Pull解析器是一]]>
    </summary>
    
      <category term="Android" scheme="http://tangxin.club/categories/Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Android权限系统]]></title>
    <link href="http://tangxin.club/2014/05/10/9.%E6%9D%83%E9%99%90%E7%B3%BB%E7%BB%9F/"/>
    <id>http://tangxin.club/2014/05/10/9.权限系统/</id>
    <published>2014-05-10T12:29:00.000Z</published>
    <updated>2015-11-20T04:46:23.905Z</updated>
    <content type="html"><![CDATA[<h2 id="请求权限实例">请求权限实例</h2><blockquote>
<p><img src="http://7xjuns.com1.z0.glb.clouddn.com/15-7-4/30544911.jpg" alt=""></p>
<p><img src="http://7xjuns.com1.z0.glb.clouddn.com/15-7-4/34097929.jpg" alt=""></p>
<p>这样设计的意义是为了让用户很方便的看到应用的权限<br><a id="more"></a></p>
</blockquote>
<h2 id="为代码添加权限检查">为代码添加权限检查</h2><blockquote>
<p>给sayhello方法注册权限</p>
<p><img src="http://7xjuns.com1.z0.glb.clouddn.com/15-7-4/19442373.jpg" alt=""></p>
<p><img src="http://7xjuns.com1.z0.glb.clouddn.com/15-7-4/58909354.jpg" alt=""></p>
<p>要执行sayHello方法 要给use加权限 否则就出抛出异常</p>
<p><img src="http://7xjuns.com1.z0.glb.clouddn.com/15-7-4/19521677.jpg" alt=""></p>
</blockquote>
<h2 id="为基本组件添加权限检查">为基本组件添加权限检查</h2><blockquote>
<p>权限不仅仅用在Activity上 Android四大组件都可以配制权根</p>
</blockquote>
<hr>
<blockquote>
<p><img src="http://7xjuns.com1.z0.glb.clouddn.com/15-7-4/78817867.jpg" alt=""></p>
<p>在同一个程序中没用加use-permission给能启动Activiy</p>
<p>在不同的程序中就不能了</p>
<p>在不同应用程序中访问需要加</p>
<p><img src="http://7xjuns.com1.z0.glb.clouddn.com/15-7-4/2649790.jpg" alt=""></p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="请求权限实例">请求权限实例</h2><blockquote>
<p><img src="http://7xjuns.com1.z0.glb.clouddn.com/15-7-4/30544911.jpg" alt=""></p>
<p><img src="http://7xjuns.com1.z0.glb.clouddn.com/15-7-4/34097929.jpg" alt=""></p>
<p>这样设计的意义是为了让用户很方便的看到应用的权限<br>]]>
    
    </summary>
    
      <category term="Android极客学院视频笔记" scheme="http://tangxin.club/tags/Android%E6%9E%81%E5%AE%A2%E5%AD%A6%E9%99%A2%E8%A7%86%E9%A2%91%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Android" scheme="http://tangxin.club/categories/Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Service]]></title>
    <link href="http://tangxin.club/2014/04/28/8.Service/"/>
    <id>http://tangxin.club/2014/04/28/8.Service/</id>
    <published>2014-04-28T02:20:00.000Z</published>
    <updated>2015-11-20T04:46:01.304Z</updated>
    <content type="html"><![CDATA[<h2 id="使用_Service">使用 Service</h2><blockquote>
<p>Socket、HTTP网络通信、与服务器保持推送的链接<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">startService(<span class="keyword">new</span> Intent(MainActiviy.<span class="keyword">this</span>.MainActiviy.class));</span><br><span class="line">stopService(<span class="keyword">new</span> Intent(MainActiviy.<span class="keyword">this</span>,MyService.class));</span><br><span class="line">这里不用担心<span class="keyword">new</span>了两个Intent 因为它们操作的是同用一个services</span><br></pre></td></tr></table></figure></p>
</blockquote>
<a id="more"></a>
<blockquote>
<p>onStartCommand在外界掉用startService时就执行掉一次执一次而onCreate公一次</p>
<p><img src="http://img-storage.qiniudn.com/15-7-3/16479474.jpg" alt=""></p>
<p><img src="http://img-storage.qiniudn.com/15-7-3/38657564.jpg" alt=""></p>
</blockquote>
<h2 id="绑定Service">绑定Service</h2><blockquote>
<p><img src="http://7xjuns.com1.z0.glb.clouddn.com/15-7-3/8346086.jpg" alt=""></p>
<p>出现如下异常  需要反回IBinder 对象</p>
<p><img src="http://7xjuns.com1.z0.glb.clouddn.com/15-7-3/26015095.jpg" alt=""></p>
<p><img src="http://7xjuns.com1.z0.glb.clouddn.com/15-7-3/55256601.jpg" alt=""></p>
<p>绑定服务退出Activiy会抛出异常 然后停止服务</p>
<p><img src="http://7xjuns.com1.z0.glb.clouddn.com/15-7-4/50436641.jpg" alt=""></p>
</blockquote>
<h2 id="Service的生命周期">Service的生命周期</h2><p>onCreate<br>onDestroy</p>
<blockquote>
<p>同时绑定和启动  必需同时解取绑定和停止服务</p>
</blockquote>
<h2 id="Service_通信">Service 通信</h2><h3 id="启动_Service_并传递数据">启动 Service 并传递数据</h3><blockquote>
<p>onStartCommand 中的第一个参数Intent 用来接收Activity那边传过来的值</p>
</blockquote>
<h3 id="绑定Service进行通信">绑定Service进行通信</h3><h4 id="Activity传数据到Service">Activity传数据到Service</h4><blockquote>
<p>通过onBind 把Activity 和Service 这种两组件连系起来</p>
<p><img src="http://7xjuns.com1.z0.glb.clouddn.com/15-7-4/11142844.jpg" alt=""></p>
<p>return new Binder(); 会被 OnServiceConnected中的 第二个参数IBinder service接收</p>
<p><img src="http://7xjuns.com1.z0.glb.clouddn.com/15-7-4/2908310.jpg" alt=""></p>
<p>在MainActiviy中定义MyService.Binder 类来操作Service中的数据<br><img src="http://7xjuns.com1.z0.glb.clouddn.com/15-7-4/71039349.jpg" alt=""></p>
</blockquote>
<h4 id="Service传数据到Activity">Service传数据到Activity</h4><blockquote>
<p>如何让内部通知外界 使用Java中的回调机制</p>
<p>MyService.java</p>
<p><img src="http://7xjuns.com1.z0.glb.clouddn.com/15-7-4/5920396.jpg" alt=""></p>
<p>把MyService.this 返回Service类的实例</p>
<p><img src="http://7xjuns.com1.z0.glb.clouddn.com/15-7-4/53487296.jpg" alt=""></p>
<p><img src="http://7xjuns.com1.z0.glb.clouddn.com/15-7-4/64649959.jpg" alt=""></p>
<p>在Android有一种这样的安全机制 UI线程是不允许其它辅线程来修改UI线程的资源的</p>
<p><img src="http://7xjuns.com1.z0.glb.clouddn.com/15-7-4/75288128.jpg" alt=""></p>
<p><img src="http://7xjuns.com1.z0.glb.clouddn.com/15-7-4/6780481.jpg" alt=""></p>
</blockquote>
<h2 id="AIDL">AIDL</h2><h3 id="跨应用启动Service">跨应用启动Service</h3><blockquote>
<p>Android5以前的版本是可以用action方式起动</p>
<p>5以后必需使用显示intent 不能使用隐示intent</p>
<p>但我们或去不到服务的定义  </p>
<p>可以用Intent的setComponect方法 第1个参数是包名 第2个包名+服务</p>
<p><img src="http://7xjuns.com1.z0.glb.clouddn.com/15-7-4/69386350.jpg" alt=""></p>
</blockquote>
<h3 id="跨应用绑定Service并通信">跨应用绑定Service并通信</h3><blockquote>
<p>同一个应用中通过定义一个Binder类 在onBind中返回Binder来实现</p>
<p>不同应用中 无法种一个程序中去访问另一个程序中的类的定义</p>
<p>android提供了一种机制AIDL 用于多个应用程序之前的通信</p>
<p><img src="http://7xjuns.com1.z0.glb.clouddn.com/15-7-4/81270539.jpg" alt=""></p>
<p>IAppServiceRemoteBinder是我写的AIDL的类名</p>
<p>new IAppServiceRemoteBinder时 (如果没有代码示 Build Project 构建一下)</p>
<p><img src="http://7xjuns.com1.z0.glb.clouddn.com/15-7-4/71484678.jpg" alt=""></p>
<p>同一应用在都过访问MyService.Binder 类中的方法来通信</p>
<p>那不同应用 在IAppServiceRemoteBinder aidl中的方法来通信</p>
<p>如何通过Binder很方便的去执行一个远程的函数呢？</p>
<p>在Another 新建一个文件夹 在新建一个包 包名也要相同</p>
<p>将App中的aidl文拷贝到Another App中</p>
<p><img src="http://7xjuns.com1.z0.glb.clouddn.com/15-7-4/52356655.jpg" alt=""></p>
<h2 id=""><img src="http://7xjuns.com1.z0.glb.clouddn.com/15-7-4/93854822.jpg" alt=""></h2><p>不能这样强制转换 虽然这两类类名相同 但在分别在不同的App中内存地址不同</p>
<p>这两个内的定义所在的内存地址是不一样的</p>
<p><img src="http://7xjuns.com1.z0.glb.clouddn.com/15-7-4/47183750.jpg" alt=""></p>
<p>正确方式</p>
<p><img src="http://7xjuns.com1.z0.glb.clouddn.com/15-7-4/41316071.jpg" alt=""><br><img src="" alt=""></p>
</blockquote>
<h2 id="列出类与方法">列出类与方法</h2><h2 id="自我提问">自我提问</h2><p>1.绑定服务和一般启动服务的区别?</p>
<p>2.Acitivy到Service传递数据有哪些方式?</p>
<p>3.Activiy中OnServiceConnected 、Service中onBind、onStartCommand、onCreate、onDestroy有什么用？</p>
<p>4.怎么实现Service 发送到Activiy?</p>
<p>5.Message类用应用的场景？</p>
<p>6.创建了一个类 在使用它时没有代码示怎么办？</p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="使用_Service">使用 Service</h2><blockquote>
<p>Socket、HTTP网络通信、与服务器保持推送的链接<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">startService(<span class="keyword">new</span> Intent(MainActiviy.<span class="keyword">this</span>.MainActiviy.class));</span><br><span class="line">stopService(<span class="keyword">new</span> Intent(MainActiviy.<span class="keyword">this</span>,MyService.class));</span><br><span class="line">这里不用担心<span class="keyword">new</span>了两个Intent 因为它们操作的是同用一个services</span><br></pre></td></tr></table></figure></p>
</blockquote>]]>
    
    </summary>
    
      <category term="Android极客学院视频笔记" scheme="http://tangxin.club/tags/Android%E6%9E%81%E5%AE%A2%E5%AD%A6%E9%99%A2%E8%A7%86%E9%A2%91%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Android" scheme="http://tangxin.club/categories/Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Intent与IntentFilter]]></title>
    <link href="http://tangxin.club/2014/04/20/7.Intent%E4%B8%8EIntentFilter/"/>
    <id>http://tangxin.club/2014/04/20/7.Intent与IntentFilter/</id>
    <published>2014-04-19T22:49:00.000Z</published>
    <updated>2015-11-20T04:45:40.923Z</updated>
    <content type="html"><![CDATA[<h2 id="显示Intent">显示Intent</h2><p>  startActivity(new Intent(MainActiviy.this,AnotherAcitivy.class));<br>  通过这种方式起动的是显示Intent,  指定的要启动的activity的类的定义</p>
<h2 id="隐示Intent">隐示Intent</h2><h3 id="启动本应用的Activiy">启动本应用的Activiy</h3><blockquote>
<p><img src="http://img-storage.qiniudn.com/15-7-3/3934227.jpg" alt=""><br><a id="more"></a><br><img src="http://img-storage.qiniudn.com/15-7-3/37770327.jpg" alt=""></p>
</blockquote>
<hr>
<blockquote>
<p>约定熟成的命名规则  包名+Intent.action.AnotherAcitivy<br><img src="http://img-storage.qiniudn.com/15-7-3/95602176.jpg" alt=""></p>
</blockquote>
<hr>
<blockquote>
<p>在AnotherAcitivy添个ACTION常量 方便其它Activity访问<br><img src="http://img-storage.qiniudn.com/15-7-3/3089636.jpg" alt=""></p>
</blockquote>
<hr>
<h3 id="启动外部应用的Activity">启动外部应用的Activity</h3><blockquote>
<p>在A应用中不可能或取得到B应用的Activiy 类的定义的</p>
<p>在这种情况下可以通过action来启动是可以做到的</p>
<p>如果要只让本App内访问 禁止外部App访问 设置android:exported=”false”<br><img src="http://img-storage.qiniudn.com/15-7-3/84708025.jpg" alt=""></p>
<p>所以启动外部程序Activiy 要记得捕获异常</p>
<p>如果多个应用配制了同样的action 系统会让你选择</p>
<p><img src="http://img-storage.qiniudn.com/15-7-3/50809455.jpg" alt=""></p>
<p>清除ALAWAYS   到被启动Activity的应用中 CLEAR DEFAULTS</p>
<p><img src="http://img-storage.qiniudn.com/15-7-3/60559696.jpg" alt=""></p>
<p>多个应用同样的action  指明 android:scheme  就不会出现选择了</p>
<p><img src="http://img-storage.qiniudn.com/15-7-3/25616824.jpg" alt=""></p>
<p><img src="http://img-storage.qiniudn.com/15-7-3/78854863.jpg" alt=""></p>
</blockquote>
<h3 id="通过浏览器链接启动本地_Activity">通过浏览器链接启动本地 Activity</h3><blockquote>
<p><img src="http://img-storage.qiniudn.com/15-7-3/63104448.jpg" alt=""></p>
<p>在网页中代码<br>如果在PC上是没反映的它没法处理app协议</p>
<p><img src="http://img-storage.qiniudn.com/15-7-3/58685903.jpg" alt=""></p>
<p>获取传递过来的数据</p>
<p><img src="http://img-storage.qiniudn.com/15-7-3/73317927.jpg" alt=""></p>
</blockquote>
<h2 id="其它">其它</h2><blockquote>
<p>&lt;activity android:name=”.AnotherAcitivy”  .会和package的路经连接起来所有加个.</p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="显示Intent">显示Intent</h2><p>  startActivity(new Intent(MainActiviy.this,AnotherAcitivy.class));<br>  通过这种方式起动的是显示Intent,  指定的要启动的activity的类的定义</p>
<h2 id="隐示Intent">隐示Intent</h2><h3 id="启动本应用的Activiy">启动本应用的Activiy</h3><blockquote>
<p><img src="http://img-storage.qiniudn.com/15-7-3/3934227.jpg" alt=""><br>]]>
    
    </summary>
    
      <category term="Android极客学院视频笔记" scheme="http://tangxin.club/tags/Android%E6%9E%81%E5%AE%A2%E5%AD%A6%E9%99%A2%E8%A7%86%E9%A2%91%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Android" scheme="http://tangxin.club/categories/Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Context与 Application]]></title>
    <link href="http://tangxin.club/2014/04/15/6.Context%20%E4%B8%8EApplication/"/>
    <id>http://tangxin.club/2014/04/15/6.Context 与Application/</id>
    <published>2014-04-15T06:49:00.000Z</published>
    <updated>2015-11-20T04:45:24.383Z</updated>
    <content type="html"><![CDATA[<h2 id="Context的作用">Context的作用</h2><blockquote>
<p>常用组件继承Context 方面访问资源<br>像Activity Servers 就继承了Context</p>
<p><img src="http://img-storage.qiniudn.com/15-7-3/46806433.jpg" alt=""><br><a id="more"></a><br>在Android里面如果你想访问全局的信息必需得都过Context</p>
<p><img src="http://img-storage.qiniudn.com/15-7-3/8630353.jpg" alt=""></p>
<p>除了String还可以访问其它任何资源</p>
<p><img src="http://img-storage.qiniudn.com/15-7-3/46806433.jpg" alt=""><br><!--more--></p>
</blockquote>
<h2 id="Application的用途">Application的用途</h2><blockquote>
<p>多个组件之间数据的共享<br>间了解到Context可以做为全局息消共享的桥梁</p>
<p>1.创建一个App类  extends Application</p>
<p>2.配制Manifest.xml  android:name=”.App”</p>
<p>3.两个Activity都设置了<br>category android:name=”android.intent.category.LAUNCHER”<br>会出玩两个图标它们都是应用程序的入口</p>
<p><img src="http://img-storage.qiniudn.com/15-7-3/11293811.jpg" alt=""><br>在MainActiviy</p>
<p>4.通过(App)getApplicationContext().setTextData()<br>       (App)getApplicationContext().getTextData();<br>       来对App类进行数据存取操作</p>
<p>Application 对于同一个应用程序它是唯一的</p>
<p>不管从通过哪个Activiy启动的Application Application的onCreate都会持行<br>而且会比Activity的onCreate先执行  对在启动前做初始化操作非常有用</p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="Context的作用">Context的作用</h2><blockquote>
<p>常用组件继承Context 方面访问资源<br>像Activity Servers 就继承了Context</p>
<p><img src="http://img-storage.qiniudn.com/15-7-3/46806433.jpg" alt=""><br>]]>
    
    </summary>
    
      <category term="Android极客学院视频笔记" scheme="http://tangxin.club/tags/Android%E6%9E%81%E5%AE%A2%E5%AD%A6%E9%99%A2%E8%A7%86%E9%A2%91%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Android" scheme="http://tangxin.club/categories/Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BroadcastReceiver]]></title>
    <link href="http://tangxin.club/2014/04/08/5.BroadcastReceiver/"/>
    <id>http://tangxin.club/2014/04/08/5.BroadcastReceiver/</id>
    <published>2014-04-08T02:49:00.000Z</published>
    <updated>2015-11-20T04:45:07.392Z</updated>
    <content type="html"><![CDATA[<h2 id="使用BroadcastReceiver">使用BroadcastReceiver</h2><blockquote>
<p>创建new-&gt;other-&gt;BroadcastReceiver</p>
<p>发送息消<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SendBroadcast(<span class="keyword">new</span> Intent,<span class="keyword">this</span>,MyReceiver.class)</span><br></pre></td></tr></table></figure></p>
<p>onReceivie 接收消息  Intent可以携带数据<br><a id="more"></a><br><img src="http://7xjuns.com1.z0.glb.clouddn.com/15-7-4/76984611.jpg" alt=""></p>
</blockquote>
<h2 id="动态注册和注消BroadcastReceiver">动态注册和注消BroadcastReceiver</h2><blockquote>
<p>在有的时候我们不希望BroadcastReceiver始终处在监听状态</p>
<p>1在Manifest.xml中删除</p>
<p><img src="http://7xjuns.com1.z0.glb.clouddn.com/15-7-4/12367311.jpg" alt=""></p>
<p>2在MyReceiver中添加ACTION常量</p>
<p><img src="http://7xjuns.com1.z0.glb.clouddn.com/15-7-4/62681533.jpg" alt=""></p>
<p>3通过registerReceiver来注册   unregisterReceiver来注消</p>
<p><img src="http://7xjuns.com1.z0.glb.clouddn.com/15-7-4/3286742.jpg" alt=""></p>
<p>4通过隐式Intent来传送</p>
<p><img src="http://7xjuns.com1.z0.glb.clouddn.com/15-7-4/48444028.jpg" alt=""></p>
</blockquote>
<h2 id="BroadcastReceiver_的优先级">BroadcastReceiver 的优先级</h2><blockquote>
<p><img src="http://7xjuns.com1.z0.glb.clouddn.com/15-7-4/28902550.jpg" alt=""></p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="使用BroadcastReceiver">使用BroadcastReceiver</h2><blockquote>
<p>创建new-&gt;other-&gt;BroadcastReceiver</p>
<p>发送息消<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SendBroadcast(<span class="keyword">new</span> Intent,<span class="keyword">this</span>,MyReceiver.class)</span><br></pre></td></tr></table></figure></p>
<p>onReceivie 接收消息  Intent可以携带数据<br>]]>
    
    </summary>
    
      <category term="Android极客学院视频笔记" scheme="http://tangxin.club/tags/Android%E6%9E%81%E5%AE%A2%E5%AD%A6%E9%99%A2%E8%A7%86%E9%A2%91%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Android" scheme="http://tangxin.club/categories/Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Android日志系统]]></title>
    <link href="http://tangxin.club/2014/04/05/4.android%E6%97%A5%E5%BF%97%E7%B3%BB%E7%BB%9F/"/>
    <id>http://tangxin.club/2014/04/05/4.android日志系统/</id>
    <published>2014-04-05T02:49:00.000Z</published>
    <updated>2015-11-20T04:44:47.459Z</updated>
    <content type="html"><![CDATA[<h2 id="使用日志_API">使用日志 API</h2><blockquote>
<p>之前一直用<br><code>system.out.print</code> <code>system.err.print</code><br>是java本身提供的</p>
<p>调整Log level 只能看到当前级别和比当前级别高的信息</p>
<p><img src="http://7xjuns.com1.z0.glb.clouddn.com/15-7-4/80631137.jpg" alt=""></p>
<p><img src="http://7xjuns.com1.z0.glb.clouddn.com/15-7-4/40361784.jpg" alt=""></p>
<p><img src="http://7xjuns.com1.z0.glb.clouddn.com/15-7-4/86920859.jpg" alt=""></p>
<p>log.v无用信息 给程序员唠叨用的 比如 “这段程序好难写呀”<br><a id="more"></a></p>
</blockquote>
<h2 id="日志分类">日志分类</h2><blockquote>
<p><img src="http://7xjuns.com1.z0.glb.clouddn.com/15-7-4/82152529.jpg" alt=""></p>
</blockquote>
<h2 id="使用_DDMS_查看日志">使用 DDMS 查看日志</h2><blockquote>
<p>DDMS 是用来调式Android的非常重要的一个工具<br>可以独立运行 还可以模拟打电话 发送短息</p>
<p><img src="http://7xjuns.com1.z0.glb.clouddn.com/15-7-4/63744910.jpg" alt=""></p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="使用日志_API">使用日志 API</h2><blockquote>
<p>之前一直用<br><code>system.out.print</code> <code>system.err.print</code><br>是java本身提供的</p>
<p>调整Log level 只能看到当前级别和比当前级别高的信息</p>
<p><img src="http://7xjuns.com1.z0.glb.clouddn.com/15-7-4/80631137.jpg" alt=""></p>
<p><img src="http://7xjuns.com1.z0.glb.clouddn.com/15-7-4/40361784.jpg" alt=""></p>
<p><img src="http://7xjuns.com1.z0.glb.clouddn.com/15-7-4/86920859.jpg" alt=""></p>
<p>log.v无用信息 给程序员唠叨用的 比如 “这段程序好难写呀”<br>]]>
    
    </summary>
    
      <category term="Android极客学院视频笔记" scheme="http://tangxin.club/tags/Android%E6%9E%81%E5%AE%A2%E5%AD%A6%E9%99%A2%E8%A7%86%E9%A2%91%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Android" scheme="http://tangxin.club/categories/Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Android.Support.V4, V7, V13是什么？]]></title>
    <link href="http://tangxin.club/2014/04/03/3.android.support%E5%BA%93/"/>
    <id>http://tangxin.club/2014/04/03/3.android.support库/</id>
    <published>2014-04-02T20:49:00.000Z</published>
    <updated>2015-11-20T04:44:06.195Z</updated>
    <content type="html"><![CDATA[<h2 id="Android_Support_V4,_V7,_V13是什么？">Android Support V4, V7, V13是什么？</h2><p>本质上就是三个java library。</p>
<h2 id="为什么要有support库？">为什么要有support库？</h2><p>如果在低版本Android平台上开发一个应用程序，而应用程序又想使用高版本才拥有的功能，就需要使用Support库。</p>
<h2 id="三个Support_库的区别和作用是什么？">三个Support 库的区别和作用是什么？</h2><p>Android Support v4 是最早（2011年4月份）实现的库。用在Android1.6 (API lever 4)或者更高版本之上。它包含了相对V4, V13大的多的功能。<br>                                例如：Fragment，NotificationCompat，LoadBroadcastManager，ViewPager，PageTabAtrip，Loader，FileProvider 等。<br>                                详细API 参考 <a href="http://developer.android.com/reference/android/support/v4/app/package-summary.html" target="_blank" rel="external">http://developer.android.com/reference/android/support/v4/app/package-summary.html</a><br>Android Support v7: 这个包是为了考虑Android2.1(API level 7) 及以上版本而设计的，但是v7是要依赖v4这个包的，也就是如果要使用，两个包得同时 被引用。<br>                                v7支持了Action Bar。<br>Android Support v13:这个包的设计是为了android 3.2及更高版本的，一般我们都不常用，平板开发中能用到。</p>
<h2 id="如何使用？">如何使用？</h2><p>首先要保证Android Support Library 被安装</p>
<p>然后在工程中增加（例如 support-v4 Library）</p>
<p>在ADT中需要按照以下步骤：<br>1、右击当前工程，查找Properties<br>2、选择Java Build Path<br>3、选择Libraries tab，点击右边面板的Add External JARs按钮<br>4、选择android-support-v4.jar文件，这一文件的常见路径为:YOUR_DRIVE\android-sdks\extras\android\support\v4\android-support-v4.jar<br>5、完成添加后，选择Order and Export标签，确认即可。</p>
<p>5 v4、v7、v13 的例子代码<br>4v : <sdk>/extras/android/support/samples/Support4Demos/<br>7v : <sdk>/extras/android/support/samples/Support7Demos/<br>13v : <sdk>/extras/android/support/samples/Support13Demos/<br>App Navigation: <sdk>/extras/android/support/samples/SupportAppNavigation/</sdk></sdk></sdk></sdk></p>
<p>参考：<a href="http://blog.chinaunix.net/uid-24709751-id-4571812.html" target="_blank" rel="external">http://blog.chinaunix.net/uid-24709751-id-4571812.html</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="Android_Support_V4,_V7,_V13是什么？">Android Support V4, V7, V13是什么？</h2><p>本质上就是三个java library。</p>
<h2 id="为什么要有support库？">为什么要有suppor]]>
    </summary>
    
      <category term="Android" scheme="http://tangxin.club/tags/Android/"/>
    
      <category term="Android" scheme="http://tangxin.club/categories/Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Activity]]></title>
    <link href="http://tangxin.club/2014/04/01/2.Activity/"/>
    <id>http://tangxin.club/2014/04/01/2.Activity/</id>
    <published>2014-03-31T20:49:00.000Z</published>
    <updated>2015-11-20T04:42:16.286Z</updated>
    <content type="html"><![CDATA[<h2 id="Activity">Activity</h2><blockquote>
<p>Activity绑定自定义视图 setConView()</p>
<p>启动另一个 Activity<br>startActivity()</p>
<p>下载帮助文档 用于离线查看<br><a id="more"></a></p>
</blockquote>
<h2 id="Activity生命周期">Activity生命周期</h2><pre><code><span class="title">onCreate</span>
<span class="built_in">on</span>Start         <span class="built_in">on</span>Restart
<span class="built_in">on</span>Resume

<span class="built_in">on</span>Pause
<span class="built_in">on</span>Stop
<span class="built_in">on</span>Destroy
</code></pre><blockquote>
<p>按退出键  onPause-onStop-onDestroy<br>再次进入  onCreate-onStart-onResume</p>
<p>按Home键 onPause-onStop-onDestroy<br>再次进入 onRestart-onStart-onResume</p>
<p>这是一个全新的生命周期了</p>
<p>在A B两个Activiy切换时的<br>AonPause-BonCreate-BonStart-BonResume-AonStop</p>
<p>如果B是对话框 A在背后可见  而A不会执行onStop<br>AonPause-BonCreate-BonStart-BonResume</p>
<p>关掉B对话框 BonPause-AonResume-BonStop-BonDestroy</p>
</blockquote>
<h2 id="Intent传递数据">Intent传递数据</h2><h3 id="传递简单数据">传递简单数据</h3><p>MainActivity.java<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Intent i = <span class="keyword">new</span> Intent(MainActivity.<span class="keyword">this</span>,AnotherAcitivy.class);</span><br><span class="line">i.putExtra(<span class="string">"data"</span>,<span class="string">"hello tangxin"</span>);</span><br><span class="line">startActivity(i);</span><br></pre></td></tr></table></figure></p>
<p>AnotherAcitivy.java<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Intent i = getIntent();</span><br><span class="line">textview = (TextView)findViewById(R.id.tv_show);</span><br><span class="line">textView.setText(i.getStringExtra(<span class="string">"data"</span>));</span><br></pre></td></tr></table></figure></p>
<h3 id="传递数据包">传递数据包</h3><p>MainActivity.java<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Intent i = <span class="keyword">new</span> Intent(MainActivity.<span class="keyword">this</span>,AnotherAcitivy.class);</span><br><span class="line">Bundle b = <span class="keyword">new</span> Bundle();</span><br><span class="line">b.putString(<span class="string">"name"</span>,<span class="string">"tangxin"</span>);</span><br><span class="line">b.putInt(<span class="string">"age"</span>,<span class="number">21</span>);</span><br><span class="line">i.putExtras(b);</span><br><span class="line"><span class="comment">//i.putExtra("data",b);</span></span><br></pre></td></tr></table></figure></p>
<p>AnotherAcitivy.java<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Intent i = getIntent();</span><br><span class="line"><span class="comment">//Bundle data = i.getExtras(); //与i.putExtra("data",b)对应</span></span><br><span class="line">Bundle data = i.getExtra();</span><br><span class="line">textView.setText(String.format(<span class="string">"name=%s,age=%d"</span>,data.getString(<span class="string">"name"</span>),data.getInt(<span class="string">"age"</span>),date.getString(<span class="string">"name1"</span>,<span class="string">"leo"</span>))); <span class="comment">//如果name1不存在才会 name1=leo</span></span><br></pre></td></tr></table></figure></p>
<h3 id="传递值对象">传递值对象</h3><p>MainActivity.java<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">i.putExtra(<span class="string">"usr"</span>,<span class="keyword">new</span> User(<span class="string">"tangxin,22"</span>)); <span class="comment">//需要implemente序列化值接写会报错</span></span><br></pre></td></tr></table></figure></p>
<h4 id="implemente_Serializable">implemente Serializable</h4><p>User.java</p>
<p><img src="http://img-storage.qiniudn.com/15-7-3/34890526.jpg" alt="User类implemente Serializable"></p>
<p>MainActi.java</p>
<blockquote>
<p><img src="http://img-storage.qiniudn.com/15-7-3/55647036.jpg" alt="序列化"></p>
<p>java 提供了 java.io.Serializable</p>
<p>android 提供了android.os.Parcelable专门面向移动的效率比java.io.Serializable高</p>
</blockquote>
<p>AnotherAcitivy.java<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">User user = (Usr) i.getSerializableExtra(<span class="string">"user"</span>);</span><br><span class="line">textview.setText(String.format(<span class="string">"name=%s,age=%d"</span>,user.getName(),user.getAge()));</span><br></pre></td></tr></table></figure></p>
<hr>
<blockquote>
<p>findViewById 被注释掉会出现空指针异常</p>
</blockquote>
<h4 id="implemente_Parcelable">implemente Parcelable</h4><p>User.java</p>
<p><img src="http://img-storage.qiniudn.com/15-7-3/24677583.jpg" alt="User类implemente Parcelable"></p>
<p><img src="http://img-storage.qiniudn.com/15-7-3/21981610.jpg" alt=""><br>Parcelable 没有全自动的机制需要我们手动写</p>
<p>AnotherAcitivy.java<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">User user = (Usr) i.getParcelableExtra(<span class="string">"user"</span>);</span><br><span class="line">textview.setText(String.format(<span class="string">"name=%s,age=%d"</span>,user.getName(),user.getAge()));</span><br></pre></td></tr></table></figure></p>
<h4 id="总结">总结</h4><blockquote>
<p>用Serializable操作比较简单是系统帮我们操作的速度慢  java提供的</p>
<p>用Parcelable要手动实现三个方法 速度快 是android提供的</p>
</blockquote>
<h3 id="获取_Activity_的返回参数">获取 Activity 的返回参数</h3><p>AnotherAcitivy.java</p>
<p><img src="http://img-storage.qiniudn.com/15-7-3/74172036.jpg" alt=""></p>
<blockquote>
<p>Intent它不仅可以起动一个Activiy还可以做为一个载本把数据在Activiy之间传来传去的</p>
</blockquote>
<p>MainActivity.java<br><img src="http://img-storage.qiniudn.com/15-7-3/50854667.jpg" alt=""></p>
<h2 id="Activity的起动模式">Activity的起动模式</h2><h3 id="标准模式">标准模式</h3><blockquote>
<p>toString() 可以用来获取Activity实例<br>getTask() 任务ID</p>
<p>自己起动自己<br>通过观察TaskID和Acitivity实例发现 同一个任务栈里面创建了不同的实例</p>
<p>任务栈的概念：<br>栈是先入后出 Activity一个一个入栈 当按back键 一个一个出栈就行了,这是Android跳转的一个机制</p>
<p>在Manifest.xml中<android>下可以配制</android></p>
<p><anroid:launchmode="standard"> standard是默认的</anroid:launchmode="standard"></p>
<p>android:testAllCaps=”false” //关闭全不大写</p>
</blockquote>
<h3 id="SingleTop">SingleTop</h3><blockquote>
<p>同一个文件中的ID不能一样,不同文件中的ID可以一样</p>
<p>在同一个栈里面如果我们指明启动模式是SingleTop如果些时Activiy处于栈顶只创建一个实例<br>如果不处于栈顶会创建新的实例 <a href="[http://www.jikexueyuan.com/course/678_2.html?ss=1]">观看视频</a></p>
</blockquote>
<h3 id="SingleTask_与_SingleInstance_模式">SingleTask 与 SingleInstance 模式</h3><h4 id="SingleTask">SingleTask</h4><p>有个任务栈在ID是87  任务栈里有个MainActiviy<br>启动AnotherAcitivy时 任务栈有两个Activiy<br>在AnotherAcitivy中起动MainActiviy时会把AnotherAcitivy<br>弹出 弹到MainActiviy 这时按后退 直退出</p>
<h4 id="SingleInstance">SingleInstance</h4><blockquote>
<p>将Activity存在不同的任务栈中 任务<br>从切换的动画效果可以明显看出来</p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="Activity">Activity</h2><blockquote>
<p>Activity绑定自定义视图 setConView()</p>
<p>启动另一个 Activity<br>startActivity()</p>
<p>下载帮助文档 用于离线查看<br>]]>
    
    </summary>
    
      <category term="Android极客学院视频笔记" scheme="http://tangxin.club/tags/Android%E6%9E%81%E5%AE%A2%E5%AD%A6%E9%99%A2%E8%A7%86%E9%A2%91%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Android" scheme="http://tangxin.club/categories/Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hello World]]></title>
    <link href="http://tangxin.club/2014/03/25/0.hello-world/"/>
    <id>http://tangxin.club/2014/03/25/0.hello-world/</id>
    <published>2014-03-25T02:49:00.000Z</published>
    <updated>2015-11-20T04:41:29.877Z</updated>
    <content type="html"><![CDATA[<p>Welcome to <a href="http://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="http://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="http://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick_Start">Quick Start</h2><h3 id="Create_a_new_post">Create a new post</h3><a id="more"></a>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run_server">Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate_static_files">Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy_to_remote_sites">Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Welcome to <a href="http://hexo.io/">Hexo</a>! This is your very first post. Check <a href="http://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="http://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick_Start">Quick Start</h2><h3 id="Create_a_new_post">Create a new post</h3>]]>
    
    </summary>
    
  </entry>
  
</feed>